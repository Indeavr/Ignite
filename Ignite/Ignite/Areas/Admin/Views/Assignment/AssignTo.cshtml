@model Ignite.Areas.Admin.ViewModels.CourseNameViewModel

@section styles{
    @Styles.Render("~/Content/assignmentTable.css")
}

<div class="heading">
    <h2>Assign To</h2>
</div>
@Model.Name
<br />
@using (Html.BeginForm("AssignTo", "Assignment", FormMethod.Post))
{

    @Html.AntiForgeryToken()

    @Html.HiddenFor(c => c.CourseId)
    
    <div class="creatediv1 marginTop30">

        <div class="row margin-top-50">
            <div class="col-md-12">
                <div class="panel panel-primary filterable">
                    <div class="panel-heading">
                        <h3 class="panel-title">Users<span style="color: white; font-weight: bold;"> *</span></h3>
                        <div class="pull-right">
                            <button type="button" class="btn btn-default btn-xs btn-filter"><span class="glyphicon glyphicon-filter"></span> Filter</button>
                        </div>
                    </div>
                    <table class="span12">
                        <table>
                            <tr class="filters">
                                <th style="width: 4.1%; width:50px;">
                                    <div class="checkbox radio-margin">
                                        <label id="check-all">
                                            <input type="checkbox" value="">
                                            <span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>
                                        </label>
                                    </div>
                                </th>
                                <th style="width: 33%">
                                    <input type="text" class="form-control" placeholder="Username" disabled>
                                </th>
                                <th style="width: 33%">
                                    <input type="text" class="form-control" placeholder="Type" disabled>
                                </th>
                                <th style="width: 33%">
                                    <input type="text" class="form-control" placeholder="Due Date" disabled>
                                </th>
                            </tr>
                        </table>
                        <div class="bg tablescroll">
                            <table class="table table-bordered table-striped">

                                @for (int i = 0; i < Model.Users.Count; i++)
                                {
                                    @Html.HiddenFor(m => Model.Users[i].UserId)
                                    <tr>
                                        <td style="width: 4.1%; width:50px;">
                                            <div class="checkbox radio-margin">
                                                <label class="check-label">
                                                    <input type="checkbox" value="false" name="@($"Users[{i}].Checked")" class="checkbox-input">
                                                    @*@Html.CheckBoxFor(m => Model.Users[i].Checked)*@
                                                    <span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>
                                                </label>
                                            </div>
                                        </td>
                                        <td style="width: 33%">@Model.Users[i].Username
                                        @Html.HiddenFor(u => u.Users[i].Username)</td>
                                        <td id="plzwork" style="width: 33%">
                                        <td style="width: 7%">

                                            <label class="custom-control custom-checkbox">
                                                @Html.CheckBoxFor(t => t.Users[i].Type, new { @class = "custom-control-input", id = "hidethischeckbox" })
                                                <span class="custom-control-indicator"></span>
                                            </label>

                                        </td>
                                        <td style="width: 33%">
                                            <div class="row">
                                                <div class='col-sm-6'>
                                                    <div class="form-group">
                                                        <div class='input-group date' id='datetimepicker5'>
                                                            @Html.EditorFor(d => d.Users[i].DueDate, new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(d => d.Users[i].DueDate)
                                                            <span class="input-group-addon">
                                                                <span class="glyphicon glyphicon-calendar"></span>
                                                            </span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                            
                                        <td style="width: 26%" id="dunno"></td>
                                    </tr>

                                }

                            </table>
                        </div>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <input type="submit" />
}




@*@Html.Label("User")
    @Html.DropDownListFor(u => u.UserId, Model.Users.Select(x => new SelectListItem { Text = x.UserName, Value = x.Id }))
    @Html.HiddenFor(c => c.CourseId)
    <br />
    @Html.Label("Mandatory")
    @Html.CheckBoxFor(t => t.Type)
    <br />
    @Html.Label("Duedate")
    @Html.TextBoxFor(d => d.DueDate, new { id = "datepicker" })*@


@section scripts{
    @Scripts.Render("~/bundles/assignmentTable.js")

    <script>
        $(document).ready(function () {
            $('.check-label').click(function () {
                // debugger;
                let $checkbox = $(this).find('.checkbox-input');
                let isChecked = $checkbox.prop('checked');
                if (isChecked) {
                    $checkbox.prop('checked', false);
                    $checkbox.val('false');
                }
                else {
                    $checkbox.prop('checked', true);
                    $checkbox.val('true');
                }
            })

            $('#check-all').on('click', function (e, data) {
                debugger;
                let $checkboxes = $('.check-label')
                let value = data.value
                $checkboxes.each(function (index) {
                    debugger;
                    $(this).bootstrapSwitch('setState', value);
                });

            })
            //$('#hidethischeckbox').click(function () {
            //    // debugger;
            //    let $checkbox = $(this).find('#hidethischeckbox');
            //    let isChecked = $checkbox.prop('checked');
            //    if (isChecked) {
            //        $('#dunno').append("<div id='mandatory'>" + "Mandatory")
            //    }
            //    else {
            //        $('#dunno').append("<div id='optional'>" + "Optional")
            //    }
            //})

            //$('#datepicker').datepicker({
            //    format: 'dd/mm/yyyy'
            //});
        });
    </script>
}

